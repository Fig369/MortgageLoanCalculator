@model MortgageLoanCalculator.Models.LoanModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">
    <h1 class="mb-2">Loan Calculator</h1>
    <div class="row">
        <div class="col">
            <form id="loanForm" asp-controller="HomeController" asp-action="Calculator" method="post">
                <div class="form-row">
                    <div class="form-group col-12">
                        <label asp-for="LoanAmount">Loan Amount:</label>
                        <input type="number"
                               class="form-control"
                               id="lamount"
                               min="1000"
                               step="500"
                               placeholder="1000"
                               asp-for="LoanAmount" />
                    </div>
                    <div class="form-group col-12">
                        <label asp-for="Term">Term (in Months):</label>
                        <input type="number"
                               class="form-control"
                               id="lterm" min="1"
                               placeholder="30"
                               asp-for="Term" />
                    </div>
                    <div class="form-group col-12">
                        <label asp-for="Rate">Rate:</label>
                        <input type="number"
                               class="form-control"
                               id="lrate"
                               min="1"
                               step=".5"
                               placeholder="7.5"
                               asp-for="Rate" />
                    </div>
                </div>
                <button type="submit" class="mt-2 btn btn-primary">Calculate</button>
            </form>


        </div>
        <div class="col">
            <div id="paymentTitle">
                <p>Your Monthly Payments</p>
            </div>
            <p id="payment">
                @Model.Payment.ToString("C")
            </p>
            <div class="row">
                <div class="col-6">
                    <label class="text-start">Total Principal</label>
                </div>
                <div class="col-6 text-end" id="totalPrincipal">
                    @Model.LoanAmount.ToString("C")
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <label class="text-start">Total Interest</label>
                </div>
                <div class="col-6 text-end" id="totalInterest">
                    @Model.TotalInterest.ToString("C")
                </div>
            </div>
            <div class="row">
                <div class="col-6">
                    <label class="text-start">Total Cost</label>
                </div>
                <div class="col-6 text-end" id="totalCost">
                    @Model.TotalCost.ToString("C")
                </div>
            </div>
        </div>
    </div>
    @if (Model.Payments.Count > 0)
    {
        <div class="row">
            <div class="col">
                <table id="scheduleTable" class="table table-striped table-hover table table-dark">
                    <thead class="text-white">
                        <tr>
                            <th>Month</th>
                            <th>Payment</th>
                            <th>Principal</th>
                            <th>Interest</th>
                            <th>Total Interest</th>
                            <th>Balance</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Payments)
                        {
                            <tr>
                                <td>@item.Month</td>
                                <td>@item.Payment.ToString("C")</td>
                                @*C turns the ToString to a currency.*@
                                <td>@item.MonthlyInterest.ToString("C")</td>
                                <td>@item.MonthlyPrincipal.ToString("C")</td>
                                <td>@item.TotalInterest.ToString("C")</td>
                                <td>@item.Balance.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>

<script>
    function calculateLoan() {
        var form = document.getElementById('loanForm');
        var formData = new FormData(form);

        fetch('/Home/Calculator', {
            method: 'POST',
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Update the page with the response
                updatePage(data);
            })
            .catch(error => {
                console.error('There has been a problem with your fetch operation:', error);
            });
    }

    function updatePage(data) {
        document.getElementById('payment').textContent = data.payment;
        document.getElementById('totalPrincipal').textContent = data.totalPrincipal;
        document.getElementById('totalInterest').textContent = data.totalInterest;
        document.getElementById('totalCost').textContent = data.totalCost;
        // Add more lines here to update other elements as needed
    }

    document.getElementById('loanForm').addEventListener('submit', function (event) {
        event.preventDefault();
        calculateLoan();
    });

    // Set the initial values when the page loads
    window.onload = function () {
        var initialData = {
            payment: parseFloat('@Model.Payment'),
            totalPrincipal: parseFloat('@Model.LoanAmount'),
            totalInterest: parseFloat('@Model.TotalInterest'),
            totalCost: parseFloat('@Model.TotalCost')
        };
        updatePage(initialData);
    };

</script>




